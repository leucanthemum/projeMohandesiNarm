
import java.io.File;

import java.io.FileInputStream;

import java.io.FileOutputStream;

import java.io.IOException;

import java.io.ObjectInputStream;

import java.io.ObjectOutputStream;

import java.io.Serializable;

import java.util.ArrayList;

import java.util.Scanner;




class Employee {

	
	private int id;
	
	private String name;

	private double salary;
	
	private long contact_no;

	private String email_id;

	
	
	

	public void setEmployeeId(int employeeId){
  
      this.employeeId=employeeId;
    }
 
  
 public void setEmployeeName(String employeeName){
  
      this.employeeName=employeeName;
    }
 
  
 public void setSalary(double salary){
     
   this.salary=salary;
    }
 
   

  
  
    public int getEmployeeId(){
      
  return employeeId;
    }
  
 
 public String getEmployeeName(){
       
 return employeeName;
    }
 

   public double getSalary(){
   
     return salary;
    }
   
	

}





public class EmployeeManagement
{
	
	
public class Main{
 
   public staic void main(String[] args){
 
      Scanner sc = new Scanner(System.in);
 
       Employee emp = new Employee();

 
       System.out.println("Enter Id:"+setEmployeeId(sc.nextInt()))
  
      System.out.println("Enter Name:"+setEmployeeName(sc.next()));
 
       System.out.println("Enter salary:"+setSalary(sc.nextDouble()));




public Employee getEmployeeDetails() {
 
     Employee employee = new Employee();
 
     System.out.println("Enter Id:");
 
     employee.setEmployeeId(scanner.nextInt());
 
     System.out.println("Enter Name:");
 
     employee.setEmployeeName(scanner.next());
 
     System.out.println("Enter salary:");
    
  employee.setSalary(scanner.nextDouble());
   
   return employee;
  }

    }
}
	
	

public class SalaryCalculator{
    
   
 private double hours, pay;

   
 public void setHours(double hours){
    
    this.hours = hours;
    }
   
 public void setHourlyPay(double pay){
   
     this.pay = pay;
    }
   
 public double calculateMonthlyPay(){
  
      return
               hours * pay;
    }

}

public class SimpleEmployee:SalaryCalculator{
 
   
    public double calculateMonthlyPay(){
 
       return
               hours * pay;
    }

}

public class HighRankEmployee:SalaryCalculator{
    
 
   public double calculateMonthlyPay(){
      
  return
               hours * pay;
    }

}	
	
		
do
		
{
			
System.out.println("\n*********Welcome to the Employee Management System**********\n");
	
		System.out.println(                     "1). Add Employee to the DataBase\n" +
	
							"2). Search for Employee\n" +
	
							"3). Edit Employee details\n" +
	
							"4). Delete Employee Details\n" +

							"5). Display all Employees working in this company\n" +
	
							"6). EXIT\n");
			
System.out.println("Enter your choice : ");

			int ch = sc.nextInt();

			
			switch(ch)

			{
			case 1:System.out.println("\nEnter the following details to ADD list:\n");

				System.out.println("Enter ID :");
				id = sc.nextInt();
				System.out.println("Enter Name :");
				name = sc.next();
				System.out.println("Enter Salary :");
				salary = sc.nextFloat();
				System.out.println("Enter Contact No :");
				contact_no = sc.nextLong();
				System.out.println("Enter Email-ID :");
				email_id = sc.next();
				al.add(new Employee(id, name, salary, contact_no, email_id));
				display(al);
				break;
				
			case 2: System.out.println("Enter the Employee ID to search :");
					id = sc.nextInt();
					int i=0;
					for(Employee e: al)
					{
						if(id == e.id)
						{
							System.out.println(e+"\n");
							i++;
						}
					}
					if(i == 0)
					{
						System.out.println("\nEmployee Details are not available, Please enter a valid ID!!");
					}
					break;
			
			case 3: System.out.println("\nEnter the Employee ID to EDIT the details");
					id = sc.nextInt();
					int j=0;
					for(Employee e: al)
					{
						if(id == e.id)
						{	
							j++;
						do{
							int ch1 =0;
							System.out.println("\nEDIT Employee Details :\n" +
												"1). Employee ID\n" +
												"2). Name\n" +
												"3). Salary\n" +
												"4). Contact No.\n" +
												"5). Email-ID\n" +
												"6). GO BACK\n");
							System.out.println("Enter your choice : ");
							ch1 = sc.nextInt();
							switch(ch1)
							{
							case 1: System.out.println("\nEnter new Employee ID:");
									e.id =sc.nextInt();
									System.out.println(e+"\n");
									break;
							
							case 2: System.out.println("Enter new Employee Name:");
									e.name =sc.nextLine();
									System.out.println(e+"\n");
									break;
									
							case 3: System.out.println("Enter new Employee Salary:");
									e.salary =sc.nextFloat();
									System.out.println(e+"\n");
									break;
									
							case 4: System.out.println("Enter new Employee Contact No. :");
									e.contact_no =sc.nextLong();
									System.out.println(e+"\n");
									break;
									
							case 5: System.out.println("Enter new Employee Email-ID :");
									e.email_id =sc.next();
									System.out.println(e+"\n");
									break;
									
							case 6: j++;
									break;
									
							default : System.out.println("\nEnter a correct choice from the List :");
										break;
							
							}
							}
						while(j==1);
						}
					}
					if(j == 0)
					{
						System.out.println("\nEmployee Details are not available, Please enter a valid ID!!");
					}
				
					break;
					
			case 4: System.out.println("\nEnter Employee ID to DELETE from the Databse :");
					id = sc.nextInt();
					int k=0;
					try{
					for(Employee e: al)
					{
						if(id == e.id)
						{
								al.remove(e);
								display(al);
								k++;
						}
					}
					if(k == 0)
					{
						System.out.println("\nEmployee Details are not available, Please enter a valid ID!!");
					}
					}
					catch(Exception ex){
						System.out.println(ex);
					}
					break;
			
			case 5: try {
					al = (ArrayList<Employee>)ois.readObject();
				
				} catch (ClassNotFoundException e2) {
					
					System.out.println(e2);
				} catch (Exception e2) {
					
					System.out.println(e2);
				}
					display(al);
					break;
			
			case 6: try {
					System.exit(0);
					break;
					
			default : System.out.println("\nEnter a correct choice from the List :");
						break;
			
			}
		}
		while(true);
	}
	
}